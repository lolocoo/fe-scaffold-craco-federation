{
	// Place your vite-react-ts-federation workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "Drawer": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antDrawer",
    "body": [
      "<Drawer title=\"$1\" placement={${2|left,right,top,bottom|}} width={500} onClose={onClose} visible={visible} extra={}>",
        "$3",
      "</Drawer>",
    ]
  },
  "Tooltip": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antTooltip",
    "body": [
      "<Tooltip title=\"$1\" placement=\"${2|top,right,bottom,left|}\">",
        "$3",
      "</Tooltip>",
    ]
  },
  "Alert": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antAlert",
    "body": [
      "<Alert message=\"$1\" type=\"${2|success,info,warning,error|}\" />"
    ]
  },
  "Modal" : {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antModal",
    "body": [
      "<Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>",
        "$1",
      "</Modal>"
    ]
  },
  "ModalForm": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antModalForm",
    "body": [
      "<Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>",
        "<Row gutter={16}>",
          "<Col span=\"18\" offset=\"3\">",
            "$1",
          "</Col>",
        "</Row>",
      "</Modal>"
    ]
  },
  "Tabs": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antTabs",
    "body": [
      "<Tabs defaultActiveKey=\"1\" onChange={callback}>",
        "<TabPane tab=\"Tab 1\" key=\"1\">",
        "</TabPane>",
        "<TabPane tab=\"Tab 1\" key=\"2\">",
        "</TabPane>",
      "</Tabs>",
    ]
  },
  "Descriptions": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antDesc",
    "body": [
      "<Descriptions title=\"$1\" bordered>",
        "<Descriptions.Item label=\"$2\">$3</Descriptions.Item>",
      "</Descriptions>",
    ]
  },
  "Form": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "antForm",
    "body": [
      "<Form name=\"basic\" labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\">",
        "<Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]} >",
          "<Input />",
        "</Form.Item>",
        "<Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>",
          "<Checkbox>Remember me</Checkbox>",
        "</Form.Item>",
        "<Form.Item wrapperCol={{ offset: 8, span: 16 }}>",
          "<Button type=\"primary\" htmlType=\"submit\">",
            "Submit",
          "</Button>",
        "</Form.Item>",
      "</Form>",
    ]
  },
}
